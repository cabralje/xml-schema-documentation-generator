#############################################################################
# Don't touch these...
#############################################################################

this_makefile := ${lastword ${MAKEFILE_LIST}}
SHELL = @bash@ -o pipefail -o errexit -o nounset
# generated dependencies for things derived from the NDR doc
dependencies_mk := @builddir@/dependencies.mk
.SECONDARY:
.DELETE_ON_ERROR:

#HELP:Default target is "all". Targets include:
.DEFAULT_GOAL = all

#############################################################################
# AUTOCONF inputs

srcdir = @srcdir@
builddir = @builddir@
install_dir = @install_dir@
xml_catalog = @xml_catalog@

#############################################################################
# COMMANDS

# autoconf stuff
MKDIR_P = @MKDIR_P@
INSTALL = @INSTALL@
SED = @SED@
# unix stuff
find = @find@
touch = @touch@

# webb stuff
saxon = @saxon@

#############################################################################
# variables

build_dir = ${builddir}/build

prefixes_file = ${build_dir}/prefixes.xml
all_sources = ${wildcard ${srcdir}/xsl/*.xsl}
definitions_mk = ${build_dir}/definitions.mk
backlinks_file = ${build_dir}/backlinks.xml

tokens_dir = ${build_dir}/tokens
built_all_token = ${tokens_dir}/built-all
installed_token = ${tokens_dir}/installed
make_dirs_token = ${tokens_dir}/make-dirs
generate_diagrams_token = ${tokens_dir}/generate-diagrams
process_diagrams_token = ${tokens_dir}/process-diagrams
generate_pages_token = ${tokens_dir}/generate-pages

#############################################################################
.PHONY: all #    build everything
all: ${generate_pages_token}

${prefixes_file}: ${xml_catalog} ${srcdir}/xsl/collect-prefixes.xsl
	${MKDIR_P} ${dir $@}
	${saxon} --in=$< --out=$@ --xsl=${srcdir}/xsl/collect-prefixes.xsl

${definitions_mk}: ${xml_catalog} ${prefixes_file} ${all_sources}
	${MKDIR_P} ${dir $@}
	${saxon} --in=$< --out=$@ --xsl=${srcdir}/xsl/generate-makefile.xsl \
	  +prefixes-file=${prefixes_file} \
	  +xml-catalog-file=${xml_catalog}

${backlinks_file}: ${xml_catalog} ${prefixes_file} ${xml_catalog} ${all_sources}
	${MKDIR_P} ${dir $@}
	${saxon} --in=$< --out=$@ --xsl=xsl/collect-backlinks.xsl \
	  +prefixes-file=${prefixes_file} \
	  +xml-catalog-file=${xml_catalog}

${make_dirs_token}: ${definitions_mk}
	${MAKE} -C ${srcdir} -f generate.mk dirs \
	  definitions_mk=${definitions_mk} \
	  build_dir=${build_dir}
	${MKDIR_P} ${dir $@}
	${touch} $@

${generate_diagrams_token}: ${xml_catalog} ${make_dirs_token} ${all_sources} ${prefixes_file} \
  ${backlinks_file}
	${saxon} --in=$< --out=${build_dir}/generate-diagrams-report.txt \
	  --xsl=xsl/generate.xsl \
	  -- -im:"{}component-diagram" \
	  +prefixes-file=${prefixes_file} \
	  +xml-catalog-file=${xml_catalog} \
	  +backlinks-file=${backlinks_file} \
	  root-path=${realpath ${build_dir}}
	${MKDIR_P} ${dir $@}
	${touch} $@

${process_diagrams_token}: ${generate_diagrams_token}
	${MAKE} -C ${srcdir} -f generate.mk diagrams \
	  definitions_mk=${definitions_mk} \
	  build_dir=${build_dir}
	${MKDIR_P} ${dir $@}
	${touch} $@

${generate_pages_token}: ${xml_catalog} ${process_diagrams_token} ${all_sources} ${prefixes_file} \
  ${backlinks_file}
	${saxon} --in=$< --out=${build_dir}/generate-pages-report.txt \
	  --xsl=xsl/generate.xsl \
	  +prefixes-file=${prefixes_file} \
	  +xml-catalog-file=${xml_catalog} \
	  +backlinks-file=${backlinks_file} \
	  root-path=${realpath ${build_dir}}
	${MKDIR_P} ${dir $@}
	${touch} $@

#############################################################################
.PHONY: install #    install everything to $install_dir
install: ${installed_token}

${installed_token}: ${generate_pages_token} ${definitions_mk}
	${MAKE} -C ${srcdir} -f generate.mk install \
	  definitions_mk=${definitions_mk} \
	  build_dir=${build_dir} \
	  install_dir=${install_dir}
	${MKDIR_P} ${dir $@}
	${touch} $@

#############################################################################
# convenience targets

.PHONY: clean #    clean regular build products
clean:
	${RM} -r ${build_dir}

.PHONY: distclean #    Clean all products
distclean: clean
	${RM} config.log config.status Makefile

#############################################################################
# make help: this must be the last target

.PHONY: help #    Print this help
help:
	@ ${SED} -e '/^\.PHONY:/s/^\.PHONY: *\([^ #]*\) *\#\( *\)\([^ ].*\)/\2\1: \3/p;/^[^#]*#HELP:/s/[^#]*#HELP:\(.*\)/\1/p;d' ${this_makefile}

# don't put anything after this
